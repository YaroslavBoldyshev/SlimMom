{"version":3,"file":"static/js/778.a026fc60.chunk.js","mappings":"qSAEaA,EAAeC,EAAAA,EAAAA,KAAW,yCAI1BC,EAAQD,EAAAA,EAAAA,GAAS,gNAYjBE,EAAQF,EAAAA,EAAAA,MAAY,0MAWpBG,EAAYH,EAAAA,EAAAA,MAAY,iOAYxBI,EAAQJ,EAAAA,EAAAA,MAAY,qIAQpBK,EAAYL,EAAAA,EAAAA,OAAa,yXAkBzBM,EAAYN,EAAAA,EAAAA,OAAa,6PAazBO,EAAiBP,EAAAA,EAAAA,IAAU,0KAS3BQ,EAAMR,EAAAA,EAAAA,IAAU,oMAWhBS,EAAQT,EAAAA,EAAAA,IAAU,6K,6BCE/B,EAjFyB,WACvB,OAAgCU,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAC5B,GAA0BF,EAAAA,EAAAA,UAAS,IAAG,eAA/BG,EAAK,KAAEC,EAAQ,KACtB,GAAgCJ,EAAAA,EAAAA,UAAS,IAAG,eAArCK,EAAQ,KAAEC,EAAW,KACtBC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAH,GAAqC,IAAD,IAA9BC,OAAUC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACtC,OAAQD,GACN,IAAK,WACH,OAAOZ,EAAYa,GACrB,IAAK,QACH,OAAOX,EAASW,GAClB,IAAK,WACH,OAAOT,EAAYS,GACrB,QACE,OAEN,EAEMC,EAAiB,CAAEC,SAAAA,EAAAA,GAAUC,MAAAA,EAAAA,IAgBnC,OACE,gCACGX,GAAY,SAACY,EAAA,EAAM,IAAM,MAC1B,UAAC9B,EAAY,CAAC+B,SAjBG,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAW,CAAEtB,SAAAA,EAAUE,MAAOA,EAAMqB,cAAenB,SAAAA,GACzDK,EAASM,EAAeC,SAASM,IAC9BE,MAAK,WACJf,GAASQ,EAAAA,EAAAA,IAAM,CAAEf,MAAOA,EAAMqB,cAAenB,SAAAA,IAC/C,IACCqB,OAAM,SAAAC,GAAK,OAAIA,EAAMA,EAAMC,QAAQ,IAEtC1B,EAAY,IACZE,EAAS,IACTE,EAAY,GACd,EAKyC,WACnC,SAACf,EAAK,UAAC,cACP,UAACC,EAAK,WAAC,SAEL,SAACE,EAAK,CACJmC,KAAK,OACLf,KAAK,WACLgB,SAAUlB,EACVG,MAAOd,QAGX,UAACT,EAAK,WAAC,UAEL,SAACE,EAAK,CACJmC,KAAK,QACLf,KAAK,QACLgB,SAAUlB,EACVG,MAAOZ,QAGX,UAACV,EAAS,WAAC,aAET,SAACC,EAAK,CACJmC,KAAK,WACLf,KAAK,WACLgB,SAAUlB,EACVG,MAAOV,QAGX,UAACR,EAAc,YACb,SAACF,EAAS,CAACkC,KAAK,SAAQ,SAAC,cACzB,SAAC,KAAO,CAACE,GAAG,SAAQ,UAClB,SAACnC,EAAS,CAACiC,KAAK,SAAQ,SAAC,oBAI/B,SAAC/B,EAAG,CAACkC,IAAKC,KACV,SAAClC,EAAK,CAACiC,IAAKE,MAGlB,EC9FA,EAJqB,WACnB,OAAO,SAAC,EAAgB,GAC1B,C","sources":["components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.jsx","pages/Registration/Registration.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const RegisterForm = styled.form`\n  width: 400px;\n`;\n\nexport const Title = styled.h4`\n  margin-top: 0;\n  margin-bottom: 55px;\n  color: #fc842d;\n  text-transform: uppercase;\n\n  @media screen and (max-width: 767px) {\n    display: flex;\n    margin-left: 60px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  margin-bottom: 40px;\n  flex-direction: column;\n  color: #9b9faa;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n`;\n\nexport const LabelPass = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.21;\n  color: #9b9faa;\n  letter-spacing: 0.04em;\n  margin-bottom: 60px;\n`;\n\nexport const Input = styled.input`\n  width: 240px;\n  border: none;\n  font-size: 16px;\n  border-bottom: 1px solid #e0e0e0;\n  outline: none;\n`;\n\nexport const RegButton = styled.button`\n  color: white;\n  width: 182px;\n  padding: 13px 15px;\n  font-size: 14px;\n  font-weight: 700;\n  border: 2px solid #fc842d;\n  border-radius: 30px;\n  background-color: #fc842d;\n  margin-right: 32px;\n  cursor: pointer;\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const LogButton = styled.button`\n  width: 182px;\n  padding: 13px 15px;\n  font-size: 14px;\n  font-weight: 700;\n  color: #fc842d;\n  cursor: pointer;\n  letter-spacing: 0.04em;\n  background-color: white;\n  border-radius: 30px;\n  border: 2px solid #fc842d;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  @media screen and (max-width: 767px) {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n    margin-left: 30px;\n  }\n`;\n\nexport const Img = styled.img`\n  display: none;\n  @media (min-width: 768px) and (max-width: 1279px) {\n    display: block;\n    position: absolute;\n    top: 0px;\n    right: 0;\n    z-index: -1;\n  }\n`;\n\nexport const Image = styled.img`\n  display: none;\n  @media (min-width: 1280px) {\n    display: block;\n    position: absolute;\n    top: 0px;\n    right: 0;\n    z-index: -1;\n  }\n`;\n","import Loader from 'components/Loader/Loader';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { isLoaded } from 'redux/auth/auth-selectors';\nimport { register, logIn } from '../../redux/auth/auth-operations';\nimport {\n  ButtonsWrapper,\n  Image,\n  Img,\n  Input,\n  Label,\n  LabelPass,\n  LogButton,\n  RegButton,\n  RegisterForm,\n  Title,\n} from './RegistrationForm.styled';\nimport img from '../../images/homeBgTablet.jpg';\nimport image from '../../images/homeBgDesktop.jpg';\n\nconst RegistrationForm = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isLoading = useSelector(isLoaded);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'username':\n        return setUsername(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const authOperations = { register, logIn };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = { username, email: email.toLowerCase(), password };\n    dispatch(authOperations.register(formData))\n      .then(() => {\n        dispatch(logIn({ email: email.toLowerCase(), password }));\n      })\n      .catch(error => error(error.message));\n\n    setUsername('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      {isLoading ? <Loader /> : null}\n      <RegisterForm onSubmit={handleSubmit}>\n        <Title>Register</Title>\n        <Label>\n          Name*\n          <Input\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChange}\n            value={username}\n          />\n        </Label>\n        <Label>\n          Email*\n          <Input\n            type=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n            value={email}\n          />\n        </Label>\n        <LabelPass>\n          Password*\n          <Input\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n            value={password}\n          />\n        </LabelPass>\n        <ButtonsWrapper>\n          <RegButton type=\"submit\">Register</RegButton>\n          <NavLink to=\"/login\">\n            <LogButton type=\"button\">Log In</LogButton>\n          </NavLink>\n        </ButtonsWrapper>\n      </RegisterForm>\n      <Img src={img} />\n      <Image src={image} />\n    </>\n  );\n};\n\nexport default RegistrationForm;\n","import RegistrationForm from 'components/RegistrationForm/RegistrationForm';\n\nconst Registration = () => {\n  return <RegistrationForm />;\n};\n\nexport default Registration;\n"],"names":["RegisterForm","styled","Title","Label","LabelPass","Input","RegButton","LogButton","ButtonsWrapper","Img","Image","useState","username","setUsername","email","setEmail","password","setPassword","isLoading","useSelector","isLoaded","dispatch","useDispatch","handleChange","target","name","value","authOperations","register","logIn","Loader","onSubmit","e","preventDefault","formData","toLowerCase","then","catch","error","message","type","onChange","to","src","img","image"],"sourceRoot":""}